syntax = "proto3";

package chat.simple;

option java_package = "com.example.message";
option java_outer_classname = "MessageProto";
option java_multiple_files = true;

message Message{
    enum MessageType{
        LOGIN_REQ = 0;
        LOGIN_RES = 1;
        MSG_REQ = 2;
        MSG_RES = 3;
        MSG_RX = 4;
    }

    MessageType messageType = 1;
    oneof messageBody{
        LoginReq loginReq = 2;
        MsgReq msgReq =3;
        MsgRes msgRes = 4;
        LoginRes loginRes = 5;
        MsgRX msgRX = 6;
    }
}

// 用户登录请求
message LoginReq{
    int32 userId = 1;
    string username = 2;
}

// 用户登录响应
message LoginRes{
    enum LoginStatus{
            SUCCESS = 0;
            FAIL = 1;
    }
    LoginStatus status = 1;
    string response = 2;
    int32 userId = 3;
}

// 消息发送请求
message MsgReq{
    int32 sUserId = 1;
    int32 dUserId = 2;
    string msg = 3;
}

// 消息发送失败，会向源客户端发送。消息发送成功则不发送。
message MsgRes{
    enum Status{
        SUCCESS = 0;
        FAIL = 1;
    }
    Status status = 1;
    string response = 2;
}

// 具体消息的封装
message MsgRX{
    string content = 1;
    int32 sUserId = 2;
}